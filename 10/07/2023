10/07/2023
// In your controller action
public function actionIndex()
{
    $searchModel = new Table1Search();
    $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

    return $this->render('index', [
        'searchModel' => $searchModel,
        'dataProvider' => $dataProvider,
    ]);
}

// In your search model (Table1Search.php)
class Table1Search extends Table1
{
    public function rules()
    {
        return [
            [['column1', 'column2'], 'safe'],
        ];
    }

    public function search($params)
    {
        $query = Table1::find()
            ->joinWith('table2')
            ->joinWith('table3', false);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            return $dataProvider;
        }

        $query->andFilterWhere(['LIKE', 'table1.column1', $this->column1])
            ->andFilterWhere(['=', 'table2.column2', $this->column2]);

        $query->andWhere(['IS NOT', 'table3.id', null]); // Only fetch records where table3 exists

        // Get the count of rows from table3
        $query->select(['table1.*', 'COUNT(table3.id) as table3_count'])
            ->groupBy('table1.id');

        return $dataProvider;
    }
}


use yii\db\Query;

// Perform the search filter
$query = (new Query())
    ->select(['t1.*', 'COUNT(t3.id) AS row_count'])
    ->from('table1 t1')
    ->leftJoin('table2 t2', 't1.id = t2.table1_id')
    ->leftJoin('table3 t3', 't2.id = t3.table2_id')
    ->where(/* Your filter conditions */)
    ->groupBy('t1.id')
    ->orderBy(['t1.id' => SORT_DESC]);

// Get the total count of rows for pagination
$countQuery = (new Query())
    ->from('table1 t1')
    ->leftJoin('table2 t2', 't1.id = t2.table1_id')
    ->leftJoin('table3 t3', 't2.id = t3.table2_id')
    ->where(/* Your filter conditions */);

// Execute the query and get the data
$dataProvider = new \yii\data\ActiveDataProvider([
    'query' => $query,
    'pagination' => [
        'pageSize' => 10, // Number of items per page
    ],
    'totalCount' => $countQuery->count(),
]);

// Display the data in the grid
echo \yii\grid\GridView::widget([
    'dataProvider' => $dataProvider,
    'columns' => [
        'column1',
        'column2',
        // Add more columns as needed
        'row_count',
    ],
]);


use yii\db\Expression;

$query = Table1::find()
    ->joinWith(['table2', 'table2.table3'])
    ->select([
        'Table1.*',
        'COUNT(Table3.id) AS table3_count',
    ])
    ->groupBy('Table1.id')
    ->andFilterWhere(['like', 'Table1.attribute', $searchTerm]);

$results = $query->all();
